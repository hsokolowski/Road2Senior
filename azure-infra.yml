# Pipeline do uruchamiania Terraform i provisionowania infrastruktury

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: infra-secrets  # Grupa zmiennych zawierajƒÖca m.in. PATy i has≈Ça

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      packageType: 'sdk'
      version: '8.0.x'

  - script: |
      echo "Installing Terraform 1.5.7"
      curl -s -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
      unzip terraform.zip
      sudo mv terraform /usr/local/bin/
    displayName: 'Manual Install Terraform 1.5.7'

  - task: AzureCLI@2
    displayName: 'Run Terraform Init & Apply'
    inputs:
      azureSubscription: 'Road2Senior-NewConnection2025'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        cd $(System.DefaultWorkingDirectory)/terrafrom

        echo "##[section]üîê Exporting SPN credentials to env vars"
        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_CLIENT_SECRET=$servicePrincipalKey
        export ARM_TENANT_ID=$(tenant_id)
        export ARM_SUBSCRIPTION_ID=$(subscription_id)

        echo "##[section]üöÄ Initializing Terraform"
        terraform init -reconfigure \
          -backend-config="resource_group_name=hus-dev" \
          -backend-config="storage_account_name=tfstatehubert001" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate"

        echo "##[section]‚úÖ Applying Terraform"
        terraform apply -auto-approve \
          -var="sql_admin_login=$(sql_admin_login)" \
          -var="sql_admin_password=$(sql_admin_password)" \
          -var="tenant_id=$(tenant_id)" \
          -var="azure_devops_pat=$(azure_devops_pat)" \
          -var="github_pat=$(github_pat)"
    env:
      servicePrincipalId: $(servicePrincipalId)
      servicePrincipalKey: $(servicePrincipalKey)
      subscription_id: $(subscription_id)
