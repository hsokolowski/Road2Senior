
services:
  api:
    build:
      context: ../../src/api-football-dotnet
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      KeyVaultUri: ""          # WYŁĄCZA AddAzureKeyVault
      DatabaseType: SqlServer  # (jeśli u Ciebie używane)
      ApiKey: "dev"
      Infrastructure__ApiFootball__ApiKey: "dev"
      ConnectionStrings__SqlServerConnection: "Server=mssql;Database=LeagueDatabase;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True"
      ConnectionStrings__Mssql: "Server=mssql;Database=master;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True"
      ConnectionStrings__Postgres: "Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    depends_on:
      - mssql
      - postgres
      - rabbitmq
    ports:
      - "8080:8080"
    networks: [r2snet]

  worker-python:
    build:
      context: ../../src/worker-python
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
      RABBITMQ_QUEUE: events
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - rabbitmq
      - postgres
    networks: [r2snet]

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672","15672:15672"]
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    networks: [r2snet]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: [pgdata:/var/lib/postgresql/data]
    ports: ["5432:5432"]
    networks: [r2snet]

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
    volumes: [mssqldata:/var/opt/mssql]
    ports: ["1433:1433"]
    networks: [r2snet]

networks:
  r2snet: { driver: bridge }

volumes:
  pgdata:
  mssqldata:


# version: '3.8'
# services:
#   mssql:
#     image: mcr.microsoft.com/mssql/server:2019-latest
#     container_name: road2senior-mssql-container
#     environment:
#       SA_PASSWORD: "MyStrong@Password"
#       ACCEPT_EULA: "Y"
#     ports:
#       - "1433:1433"
#     volumes:
#       - mssql_data:/var/opt/mssql
#     networks:
#       - mynetwork

# networks:
#   mynetwork:
#     driver: bridge

# volumes:
#   mssql_data: